import React, { useState, useEffect } from 'react';
import { useParams } from "react-router-dom";

import './dosiePage.scss'
import './loader.scss'

import Navbar from '../../components/dossierComponents/nav-bar/Navbar';
import LeftTopFrame from '../../components/dossierComponents/left-top-frame/LeftTopFrame';
import RightTopFrame from '../../components/dossierComponents/rigth-top-frame/RightTopFrame';
import LeftBottomFrame from '../../components/dossierComponents/left-bottom-frame/LeftBottomFrame';
import RightBottomFrame from '../../components/dossierComponents/right-bottom-frame/RightBottomFrame';
import SearchBar from '../../components/dossierComponents/search-bar/SearchBar';
import axios from 'axios';
const baseURL = 'http://192.168.30.24:9095/'
const DosiePage = (props) => {
    const [leftTopFrameData, setLeftTopFrameData] = useState({});
    const [docs, setDocs] = useState([])
    const [transport, setTransport] = useState([])
    const [relatives, setRelatives] = useState([])
    const [addresses, setAddresses] = useState([])
    const [photo, setPhoto] = useState([])
    const [base, setBase] = useState('')
    const { iin } = useParams();
    const [loading, isLoading] = useState(null)

    const [photos, setPhotos] = useState([])

    // risks
    const [criminals, setCriminals] = useState([])
    const [convicts, setConvicts] = useState([])
    const [schools, setSchools] = useState([])
    const [universities, setUniversities] = useState([])
    const [pensions, setPensions] = useState([])
    const [military, setMilitary] = useState([])
    const [militaryEntities, setMilitaryEntities] = useState([])
    const [nedvijimost, setNedvijimost] = useState([])

    useEffect(() => {
        const searchIIN = () => {
            isLoading(true)
            const params = {iin: iin}

            // let tempData = {
            //     "mvFls": [
            //         {
            //             "iin": "020131550302",
            //             "gender": "1",
            //             "birth_date": "2002-01-31",
            //             "last_name": "ҚУАНЫШБЕКОВ",
            //             "first_name": "МАДИЯР",
            //             "patronymic": "ЕРКЕБҰЛАНҰЛЫ",
            //             "citizenship_id": "105",
            //             "citizenship_ru_name": "КАЗАХСТАН",
            //             "nationality_id": "135",
            //             "nationality_ru_name": "КАЗАХ",
            //             "is_resident": true,
            //             "life_status_id": "1",
            //             "life_status_ru_name": "Нормальный",
            //             "death_date": "",
            //             "birth_region_id": "167",
            //             "birth_region_name": "",
            //             "birth_district_id": "10",
            //             "birth_district_name": "",
            //             "region": "САРАНЬ",
            //             "district": "КАРАГАНДИНСКАЯ"
            //         }
            //     ],
            //     "photoDbf": [
            //         {
            //             "iin": "020131550302",
            //             "document_type_id": "2",
            //             "photo": "",
            //             "date": "2019-01-22 09:05:20"
            //         }
            //     ],
            //     "mvAutoFls": [],
            //     "omns": [
            //         null
            //     ],
            //     "orphanss": [],
            //     "equipment": [],
            //     "dormants": [],
            //     "adms": [],
            //     "fl_relatives": [
            //         {
            //             "id": 51380815,
            //             "iin": "020131550302",
            //             "fio": "ҚУАНЫШБЕКОВ МАДИЯР ЕРКЕБҰЛАНҰЛЫ",
            //             "birth_date": "2002/01/31:12:00:00 AM",
            //             "parent_iin": "790104302143",
            //             "parent_fio": "ЖУМАБЕКОВ ЕРКЕБУЛАН КУАНЫШБЕКОВИЧ",
            //             "parent_birth_date": "1979/01/04:12:00:00 AM",
            //             "relative_type": "Ребенок",
            //             "marriage_reg_date": null,
            //             "marriage_divorce_date": null
            //         },
            //         {
            //             "id": 36023263,
            //             "iin": "020131550302",
            //             "fio": "ҚУАНЫШБЕКОВ МАДИЯР ЕРКЕБҰЛАНҰЛЫ",
            //             "birth_date": "2002/01/31:12:00:00 AM",
            //             "parent_iin": "781123401888",
            //             "parent_fio": "СМАГУЛОВА ЖАНАР НУРЖАНОВНА",
            //             "parent_birth_date": "1978/11/23:12:00:00 AM",
            //             "relative_type": "Ребенок",
            //             "marriage_reg_date": null,
            //             "marriage_divorce_date": null
            //         }
            //     ],
            //     "regAddressFls": [
            //         {
            //             "id": null,
            //             "fl_id": null,
            //             "iin": "020131550302",
            //             "registration_type": "Зарегистрирован",
            //             "country": "КАЗАХСТАН",
            //             "region": "САРАНЬ",
            //             "district": "КАРАГАНДИНСКАЯ",
            //             "city": null,
            //             "street": "УЛИЦА Жангали Кужанова",
            //             "building": "21",
            //             "korpus": null,
            //             "apartment_number": "47",
            //             "reg_date": "2020/07/08:12:00:00 AM",
            //             "reg_end_date": null,
            //             "reg_reason": "Зарегистрирован",
            //             "is_active": null
            //         }
            //     ],
            //     "pdls": [],
            //     "mvIinDocs": [
            //         {
            //             "id": "701eae4b-972d-485d-b031-10e90727d289",
            //             "gender": "1",
            //             "birth_date": "2002-01-31",
            //             "iin": "020131550302",
            //             "citizenship_id": "105",
            //             "citizenship_ru_name": "КАЗАХСТАН",
            //             "nationality_id": "135",
            //             "nationality_ru_name": "КАЗАХ",
            //             "is_resident": true,
            //             "life_status_id": "1",
            //             "life_status_ru_name": "Нормальный",
            //             "death_date": null,
            //             "doc_number": "044025690",
            //             "doc_type_id": "2",
            //             "doc_type_ru_name": "УДОСТОВЕРЕНИЕ РК",
            //             "issue_date": "2018-02-27",
            //             "expiry_date": "2028-02-26",
            //             "document_invalidity_id": "0",
            //             "document_invalidity_ru_name": "ДОКУМЕНТ ДЕЙСТВИТЕЛЕН",
            //             "document_invalidity_date": null,
            //             "issue_organization_id": "2",
            //             "issue_organization_ru_name": "МИНИСТЕРСТВО ВНУТРЕННИХ ДЕЛ РК"
            //         }
            //     ],
            //     "criminals": [],
            //     "universities": [
            //         {
            //             "id": 2567832,
            //             "lastname": "ҚУАНЫШБЕКОВ",
            //             "name": "МАДИЯР",
            //             "patronymic": "ЕРКЕБҰЛАНҰЛЫ",
            //             "iin": "020131550302",
            //             "start_date": "2017-08-29",
            //             "five": "9-1ВТП-17кс",
            //             "spec_name_2": "130404 3 - Техник-программист ",
            //             "course": null,
            //             "duration": "4",
            //             "spec_name": null,
            //             "study_name": "КГКП \"Карагандинский высший политехнический колледж\" ",
            //             "study_type": "высший колледж",
            //             "study_code": "990140001540",
            //             "end_date": "2021-06-28",
            //             "fourteen": null,
            //             "fiveteen": "обучается в ВУЗе",
            //             "sixteen": "2"
            //         },
            //         {
            //             "id": 2567833,
            //             "lastname": "ҚУАНЫШБЕКОВ",
            //             "name": "МАДИЯР",
            //             "patronymic": "ЕРКЕБҰЛАНҰЛЫ",
            //             "iin": "020131550302",
            //             "start_date": "2021-08-25",
            //             "five": null,
            //             "spec_name_2": null,
            //             "course": "1 год",
            //             "duration": "3",
            //             "spec_name": "В057 Информационные технологии",
            //             "study_name": "ТОО \"Astana IT University\"",
            //             "study_type": "университет",
            //             "study_code": "190240014589",
            //             "end_date": null,
            //             "fourteen": null,
            //             "fiveteen": null,
            //             "sixteen": "0"
            //         }
            //     ],
            //     "schools": [
            //         {
            //             "id": 4695465,
            //             "lastname": "ҚУАНЫШБЕКОВ",
            //             "name": "МАДИЯР",
            //             "patronymic": "ЕРКЕБҰЛАНҰЛЫ",
            //             "iin": "020131550302",
            //             "start_date": "2012-09-01",
            //             "grade": "8 класс",
            //             "school_name": "КГУ «Специализированная школа-интернат имени Н.Нурмакова» ",
            //             "school_type": "специализированная школа-интернат",
            //             "school_code": "950640000652",
            //             "breast_plate": null,
            //             "end_date": "2014-08-26",
            //             "ten": "др.района (города) данной области",
            //             "twelve": null,
            //             "thirdteen": "1"
            //         },
            //         {
            //             "id": 4695466,
            //             "lastname": "ҚУАНЫШБЕКОВ",
            //             "name": "МАДИЯР",
            //             "patronymic": "ЕРКЕБҰЛАНҰЛЫ",
            //             "iin": "020131550302",
            //             "start_date": "2014-08-28",
            //             "grade": "9 класс",
            //             "school_name": "КГУ \"Общеобразовательная школа  имени Абая\"",
            //             "school_type": "общеобразовательная школа",
            //             "school_code": "000140001368",
            //             "breast_plate": "получил аттестат об основном образовании",
            //             "end_date": "2017-06-12",
            //             "ten": "в колледж или др. организацию ТиПО",
            //             "twelve": "обучается в организации ТиПО",
            //             "thirdteen": "2"
            //         }
            //     ],
            //     "contacts": [],
            //     "millitaryAccounts": [],
            //     "militaryAccounting2Entities": [],
            //     "convictsTerminatedByRehabs": [],
            //     "convictsJustifieds": [],
            //     "bankrots": [],
            //     "flPensionContrs": [
            //         {
            //             "years": [
            //                 "2020.0"
            //             ],
            //             "nakoplenya": [
            //                 {
            //                     "KNP": "010",
            //                     "amount": "8500"
            //                 },
            //                 {
            //                     "amount": "2678",
            //                     "KNP": "012"
            //                 }
            //             ],
            //             "flPensionMinis": [
            //                 {
            //                     "payDate": "2020.0",
            //                     "pName": "УНИВЕР АСТАНА",
            //                     "knp": "010",
            //                     "amount": 8500
            //                 },
            //                 {
            //                     "payDate": "2020.0",
            //                     "pName": "УНИВЕР АСТАНА",
            //                     "knp": "012",
            //                     "amount": 2678
            //                 }
            //             ],
            //             "companyBin": "111140003101"
            //         },
            //         {
            //             "years": [
            //                 "2018.0"
            //             ],
            //             "nakoplenya": [
            //                 {
            //                     "KNP": "010",
            //                     "amount": "2828"
            //                 },
            //                 {
            //                     "amount": "990",
            //                     "KNP": "012"
            //                 }
            //             ],
            //             "flPensionMinis": [
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ОО ОО Республиканское общественное объединение \"Союз рабочей",
            //                     "knp": "010",
            //                     "amount": 2828
            //                 },
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ОО ОО Республиканское общественное объединение \"Союз рабочей",
            //                     "knp": "012",
            //                     "amount": 990
            //                 }
            //             ],
            //             "companyBin": "100240000856"
            //         },
            //         {
            //             "years": [
            //                 "2019.0",
            //                 "2020.0",
            //                 "2021.0"
            //             ],
            //             "nakoplenya": [
            //                 {
            //                     "KNP": "010",
            //                     "amount": "62784"
            //                 },
            //                 {
            //                     "amount": "29490",
            //                     "KNP": "012"
            //                 }
            //             ],
            //             "flPensionMinis": [
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "010",
            //                     "amount": 1424
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "012",
            //                     "amount": 1488
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "010",
            //                     "amount": 1424
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "012",
            //                     "amount": 1488
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "012",
            //                     "amount": 1488
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "010",
            //                     "amount": 1424
            //                 },
            //                 {
            //                     "payDate": "2019.0",
            //                     "pName": "КГКП Кар.высш.политех.колледж",
            //                     "knp": "012",
            //                     "amount": 1488
            //                 }
            //             ],
            //             "companyBin": "990140001540"
            //         },
            //         {
            //             "years": [
            //                 "2018.0",
            //                 "2019.0"
            //             ],
            //             "nakoplenya": [
            //                 {
            //                     "KNP": "010",
            //                     "amount": "7773.8099999999995"
            //                 },
            //                 {
            //                     "amount": "3966",
            //                     "KNP": "012"
            //                 }
            //             ],
            //             "flPensionMinis": [
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ТОО \"Карат\"",
            //                     "knp": "010",
            //                     "amount": 3000
            //                 },
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ТОО \"Карат\"",
            //                     "knp": "012",
            //                     "amount": 990
            //                 },
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ТОО \"Карат\"",
            //                     "knp": "010",
            //                     "amount": 3000
            //                 },
            //                 {
            //                     "payDate": "2018.0",
            //                     "pName": "ТОО \"Карат\"",
            //                     "knp": "012",
            //                     "amount": 990
            //                 }
            //             ],
            //             "companyBin": "960140000874"
            //         }
            //     ],
            //     "mshes": [],
            //     "mvRnOlds": [],
            //     "orphans": []
            // }

            // setPhoto(tempData.photoDbf)
            // setLeftTopFrameData(tempData.mvFls)
            // setRelatives(tempData.fl_relatives)
            // setBase(tempData.photoDbf[0].photo)
            // setPhotos(tempData.photoDbf)
            // // res.data.photoDDFmap()
            // setAddresses(tempData.regAddressFls)
            // setDocs(tempData.mvIinDocs)
            // setTransport(tempData.mvAutoFls)
            // setSchools(tempData.schools)
            // setUniversities(tempData.universities)
            // setCriminals(tempData.criminals)
            // setConvicts(tempData.convictsJustifieds)
            // setPensions(tempData.flPensionContrs)

            axios.get(baseURL+'profile', {params: params}).then(res => {
                console.log(res.data)

                setPhoto(res.data.photoDbf)
                setLeftTopFrameData(res.data.mvFls)
                setRelatives(res.data.fl_relatives)
                setBase(res.data.photoDbf[0].photo)
                setPhotos(res.data.photoDbf)
                // res.data.photoDDFmap()
                setAddresses(res.data.regAddressFls)
                setDocs(res.data.mvIinDocs)
                setTransport(res.data.mvAutoFls)
                setSchools(res.data.schools)
                setUniversities(res.data.universities)
                setCriminals(res.data.criminals)
                setConvicts(res.data.convictsJustifieds)               
                setPensions(res.data.flPensionContrs)
                setNedvijimost(res.data.mvRnOlds)

                let militaryObj = {
                    militaryAccounting2Entities: res.data.militaryAccounting2Entities, 
                    millitaryAccounts: res.data.millitaryAccounts
                }
                setMilitary(res.data.millitaryAccounts)
                setMilitaryEntities(res.data.militaryAccounting2Entities)
                
                isLoading(false)
            })
        }

        searchIIN()
    }, [iin])

    if (base != '') {
        return (  
            <>
                <div className='dosiePage'>
                    <div className="central-bar">
                        <div className="frames">
                            <LeftTopFrame photo={base} photos={photos} data={leftTopFrameData}/>
                            <RightTopFrame relatives={relatives}/>
                            <LeftBottomFrame docs={docs} addresses={addresses} transport={transport} schools={schools} 
                                universities={universities} pensions={pensions} military={military} militaryEntities={militaryEntities}
                                nedvijimost={nedvijimost}/>
                            <RightBottomFrame criminals={criminals} convicts={convicts}/>
                        </div>
                    </div>
                </div>
            </>
        );
    } else {
        return (  
            <div className='dosiePage'>
                <div className='loadComponent'>
                    <div className="dim"></div>
                    <div className='load'>
                        <div className="tab11">
                        </div>
                        <div className="tab12">
                        </div>
                        <div className="tab31">
                        </div>
                        <div className="tab32">
                        </div>

                        <div className="loader">
                            <div className="inner one"></div>
                            <div className="inner two"></div>
                            <div className="inner three"></div>
                        </div>
                        
                    </div>
                </div>
                
                {/* <div className='dosiePage'>
                    <div className="central-bar">
                        <div className="frames">
                            <LeftTopFrame photo={base} data={leftTopFrameData}/>
                            <RightTopFrame relatives={relatives}/>
                            <LeftBottomFrame docs={docs} addresses={addresses} transport={transport}/>
                            <RightBottomFrame/>
                        </div>
                    </div>
                </div> */}
            </div>
        );
    }

}

export default DosiePage;